#include "ASA_Lib.h"
#include <string.h>
#define address 0b1001000
#define 	TW_START   				0x08
#define 	TW_REP_START   				0x10
#define 	TW_MT_SLA_ACK   			0x18
#define 	TW_MT_SLA_NACK   			0x20
#define 	TW_MT_DATA_ACK   			0x28
#define 	TW_MT_DATA_NACK   			0x30
#define 	TW_MT_ARB_LOST   			0x38
#define 	TW_MR_ARB_LOST   			0x38
#define 	TW_MR_SLA_ACK   			0x40
#define 	TW_MR_SLA_NACK   			0x48
#define 	TW_MR_DATA_ACK   			0x50
#define 	TW_MR_DATA_NACK   			0x58
#define 	TW_ST_SLA_ACK   			0xA8
#define 	TW_ST_ARB_LOST_SLA_ACK  		0xB0
#define 	TW_ST_DATA_ACK   			0xB8

void TW_init(){
	DDRB |= (1<<7)|(1<<6)|(1<<5);
	PORTB |= (0<<7)|(0<<6)|(1<<5);
    TWBR = 2;
    TWSR = (1 << TWPS1);
    TWCR = (1 << TWEN);
}
void ERROR(){
	TWCR = (1<<TWINT)|(1<<TWEN)|(1<<TWSTO);
}

// one shot mode
/*
int main(){
	ASA_M128_set();
	TW_init();
	printf("---START---\n");

	TWCR = (1<<TWINT)|(1<<TWSTA)|(1<<TWEN);//Start
	while (!(TWCR & (1<<TWINT)));//Wait for TWINT flag set.
	if ((TWSR & 0xF8) != TW_START) ERROR();//Check value of TWI Status Register
	printf("%x\n",TWSR & 0xF8);//Load SLA_W into TWDR Register.

	TWDR = ( address << 1 ) & 0xFE;
	TWCR = (1<<TWINT) |(1<<TWEN);//Wait for TWINT flag set.
	while (!(TWCR & (1<<TWINT)));
	if ((TWSR & 0xF8) !=TW_MT_SLA_ACK)ERROR();//Check value of TWI Status Register
	printf("%x\n",TWSR & 0xF8);//Load DATA into TWDR Register

	TWDR = 0x01;
	TWCR = (1<<TWINT) |(1<<TWEN);
	while (!(TWCR & (1<<TWINT)));//Wait for TWINT flag set.
	if ((TWSR & 0xF8) !=TW_MT_DATA_ACK)ERROR();//Check value of TWI Status Register.
	printf("%x\n",TWSR & 0xF8);

	TWDR = 0b11100001; //1110 0001 休眠one shot
	TWCR = (1<<TWINT) |(1<<TWEN);
	while (!(TWCR & (1<<TWINT)));//Wait for TWINT flag set.
	if ((TWSR & 0xF8) !=TW_MT_DATA_ACK)ERROR();//Check value of TWI Status Register.
	printf("%x\n",TWSR & 0xF8);

	TWCR = (1<<TWINT)|(1<<TWEN)|(1<<TWSTO);//STOP
	_delay_ms(20);
	//設定讀取模式
	TWCR = (1<<TWINT)|(1<<TWSTA)|(1<<TWEN);//Start
	while (!(TWCR & (1<<TWINT)));//Wait for TWINT flag set.
	if ((TWSR & 0xF8) != TW_START) ERROR();//Check value of TWI Status Register
	printf("%x\n",TWSR & 0xF8);//Load SLA_W into TWDR Register.

	TWDR = ( address << 1 ) & 0xFE;
	TWCR = (1<<TWINT) |(1<<TWEN);//Wait for TWINT flag set.
	while (!(TWCR & (1<<TWINT)));
	if ((TWSR & 0xF8) !=TW_MT_SLA_ACK)ERROR();//Check value of TWI Status Register
	printf("%x\n",TWSR & 0xF8);//Load DATA into TWDR Register

	TWDR = 0x00;
	TWCR = (1<<TWINT) |(1<<TWEN);
	while (!(TWCR & (1<<TWINT)));//Wait for TWINT flag set.
	if ((TWSR & 0xF8) !=TW_MT_DATA_ACK)ERROR();//Check value of TWI Status Register.
	printf("%x\n",TWSR & 0xF8);
 
	TWCR = (1<<TWINT)|(1<<TWEN)|(1<<TWSTO);//STOP
	_delay_ms(20);
	//設定讀取結果
	TWCR = (1<<TWINT)|(1<<TWSTA)|(1<<TWEN);//Start
	while (!(TWCR & (1<<TWINT)));//Wait for TWINT flag set.
	if ((TWSR & 0xF8) != TW_START) ERROR();//Check value of TWI Status Register
	printf("%x\n",TWSR & 0xF8);//Load SLA_W into TWDR Register.

	TWDR = ( address << 1 )|0x01;
	TWCR = (1<<TWINT) |(1<<TWEN);//Wait for TWINT flag set.
	while (!(TWCR & (1<<TWINT)));
	if ((TWSR & 0xF8) !=TW_MR_SLA_ACK)ERROR();//Check value of TWI Status Register
	printf("%x\n",TWSR & 0xF8);//Load DATA into TWDR Register
	
	int tmp[2];
	TWCR = (1<<TWINT) |(1<<TWEN) |(1<<TWEA);//Wait for TWINT flag set.
	while (!(TWCR & (1<<TWINT)));
	printf("%x\n",TWSR & 0xF8);
	tmp[0] = TWDR;	 //receive the answer

	TWCR = (1<<TWINT) |(1<<TWEN);//Wait for TWINT flag set.
	while (!(TWCR & (1<<TWINT)));
	printf("%x\n",TWSR & 0xF8);
	tmp[1] = TWDR;	 //receive the answer

	printf("%x\n",tmp[0]);
	printf("%x\n",tmp[1]);
	
	float temper = ((((tmp[0]<<8) | tmp[1] ) &0xFFF0) >>4 )*0.0625;
	printf("tmp = %0.3f\n",temper);
	TWCR = (1<<TWINT)|(1<<TWEN)|(1<<TWSTO);//STOP
}
*/


//compare mode
///*
int flag=1;
ISR(INT4_vect) {
	EIFR |= (1<<4);
	flag=0;
	cli();	
} 

void INT_set(){
	EIMSK |= (1<<4);
	EICRB |= (1<<ISC40) | (1<<ISC41);//EICRB |= (1<<0) | (1<<1);
	DDRE = (0<<4);
	PORTE = 255;
	sei();
}

int main(){
	
	ASA_M128_set();
	INT_set();
	TW_init();
//	printf("---START---\n");
	//設定comfiguration
	TWCR = (1<<TWINT)|(1<<TWSTA)|(1<<TWEN);//Start
	while (!(TWCR & (1<<TWINT)));//Wait for TWINT flag set.
	if ((TWSR & 0xF8) != TW_START) ERROR();//Check value of TWI Status Register
	printf("%x\n",TWSR & 0xF8);//Load SLA_W into TWDR Register.

	TWDR = ( address << 1 ) & 0xFE;
	TWCR = (1<<TWINT) |(1<<TWEN);//Wait for TWINT flag set.
	while (!(TWCR & (1<<TWINT)));
	if ((TWSR & 0xF8) !=TW_MT_SLA_ACK)ERROR();//Check value of TWI Status Register
	printf("%x\n",TWSR & 0xF8);//Load DATA into TWDR Register

	TWDR = 0x01;
	TWCR = (1<<TWINT) |(1<<TWEN);
	while (!(TWCR & (1<<TWINT)));//Wait for TWINT flag set.
	if ((TWSR & 0xF8) !=TW_MT_DATA_ACK)ERROR();//Check value of TWI Status Register.
	printf("%x\n",TWSR & 0xF8);

	TWDR = 0b01100000; //1110 0001 啟動 INTERRUPT(tm=1)
	TWCR = (1<<TWINT) |(1<<TWEN);
	while (!(TWCR & (1<<TWINT)));//Wait for TWINT flag set.
	if ((TWSR & 0xF8) !=TW_MT_DATA_ACK)ERROR();//Check value of TWI Status Register.
	printf("%x\n",TWSR & 0xF8);

	TWCR = (1<<TWINT)|(1<<TWEN)|(1<<TWSTO);//STOP
	_delay_ms(20);
	//設定Thigh結果
	TWCR = (1<<TWINT)|(1<<TWSTA)|(1<<TWEN);//Start
	while (!(TWCR & (1<<TWINT)));//Wait for TWINT flag set.
	if ((TWSR & 0xF8) != TW_START) ERROR();//Check value of TWI Status Register
	printf("%x\n",TWSR & 0xF8);//Load SLA_W into TWDR Register.

	TWDR = ( address << 1 ) & 0xFE;
	TWCR = (1<<TWINT) |(1<<TWEN);//Wait for TWINT flag set.
	while (!(TWCR & (1<<TWINT)));
	if ((TWSR & 0xF8) !=TW_MT_SLA_ACK)ERROR();//Check value of TWI Status Register
	printf("%x\n",TWSR & 0xF8);//Load DATA into TWDR Register

	TWDR = 0x03;
	TWCR = (1<<TWINT) |(1<<TWEN);
	while (!(TWCR & (1<<TWINT)));//Wait for TWINT flag set.
	if ((TWSR & 0xF8) !=TW_MT_DATA_ACK)ERROR();//Check value of TWI Status Register.
	printf("%x\n",TWSR & 0xF8);

	TWDR = 0b00011110;//高溫控高8位元 30度
	TWCR = (1<<TWINT) |(1<<TWEN);
	while (!(TWCR & (1<<TWINT)));//Wait for TWINT flag set.
	if ((TWSR & 0xF8) !=TW_MT_DATA_ACK)ERROR();//Check value of TWI Status Register.
	printf("%x\n",TWSR & 0xF8);

	TWDR = 0b00000000;//高溫控低8位元
	TWCR = (1<<TWINT) |(1<<TWEN);
	while (!(TWCR & (1<<TWINT)));//Wait for TWINT flag set.
	if ((TWSR & 0xF8) !=TW_MT_DATA_ACK)ERROR();//Check value of TWI Status Register.
	printf("%x\n",TWSR & 0xF8);

	TWCR = (1<<TWINT)|(1<<TWEN)|(1<<TWSTO);//STOP
	_delay_ms(20);
	//設定Tlow模式
	TWCR = (1<<TWINT)|(1<<TWSTA)|(1<<TWEN);//Start
	while (!(TWCR & (1<<TWINT)));//Wait for TWINT flag set.
	if ((TWSR & 0xF8) != TW_START) ERROR();//Check value of TWI Status Register
	printf("%x\n",TWSR & 0xF8);//Load SLA_W into TWDR Register.

	TWDR = ( address << 1 ) & 0xFE;
	TWCR = (1<<TWINT) |(1<<TWEN);//Wait for TWINT flag set.
	while (!(TWCR & (1<<TWINT)));
	if ((TWSR & 0xF8) !=TW_MT_SLA_ACK)ERROR();//Check value of TWI Status Register
	printf("%x\n",TWSR & 0xF8);//Load DATA into TWDR Register

	TWDR = 0x02;
	TWCR = (1<<TWINT) |(1<<TWEN);
	while (!(TWCR & (1<<TWINT)));//Wait for TWINT flag set.
	if ((TWSR & 0xF8) !=TW_MT_DATA_ACK)ERROR();//Check value of TWI Status Register.
	printf("%x\n",TWSR & 0xF8);

	TWDR = 0b00011101;//低溫控高8位元 29度
	TWCR = (1<<TWINT) |(1<<TWEN);
	while (!(TWCR & (1<<TWINT)));//Wait for TWINT flag set.
	if ((TWSR & 0xF8) !=TW_MT_DATA_ACK)ERROR();//Check value of TWI Status Register.
	printf("%x\n",TWSR & 0xF8);

	TWDR = 0b10000000;//低溫控低8位元 0.5度
	TWCR = (1<<TWINT) |(1<<TWEN);
	while (!(TWCR & (1<<TWINT)));//Wait for TWINT flag set.
	if ((TWSR & 0xF8) !=TW_MT_DATA_ACK)ERROR();//Check value of TWI Status Register.
	printf("%x\n",TWSR & 0xF8);

	TWCR = (1<<TWINT)|(1<<TWEN)|(1<<TWSTO);//STOP
	_delay_ms(20);
	//////////////////////////////////
	//設定讀取模式
	TWCR = (1<<TWINT)|(1<<TWSTA)|(1<<TWEN);//Start
	while (!(TWCR & (1<<TWINT)));//Wait for TWINT flag set.
	if ((TWSR & 0xF8) != TW_START) ERROR();//Check value of TWI Status Register
		printf("%x\n",TWSR & 0xF8);//Load SLA_W into TWDR Register.

	TWDR = ( address << 1 ) & 0xFE;
	TWCR = (1<<TWINT) |(1<<TWEN);//Wait for TWINT flag set.
	while (!(TWCR & (1<<TWINT)));
	if ((TWSR & 0xF8) !=TW_MT_SLA_ACK)ERROR();//Check value of TWI Status Register
		printf("%x\n",TWSR & 0xF8);//Load DATA into TWDR Register

	TWDR = 0x00;
	TWCR = (1<<TWINT) |(1<<TWEN);
	while (!(TWCR & (1<<TWINT)));//Wait for TWINT flag set.
	if ((TWSR & 0xF8) !=TW_MT_DATA_ACK)ERROR();//Check value of TWI Status Register.
		printf("%x\n",TWSR & 0xF8);

	TWCR = (1<<TWINT)|(1<<TWEN)|(1<<TWSTO);//STOP
	_delay_ms(20);
	//設定讀取結果
	while(1){
		TWCR = (1<<TWINT)|(1<<TWSTA)|(1<<TWEN);//Start
		while (!(TWCR & (1<<TWINT)));//Wait for TWINT flag set.
		if ((TWSR & 0xF8) != TW_START) ERROR();//Check value of TWI Status Register
		//printf("%x\n",TWSR & 0xF8);//Load SLA_W into TWDR Register.

		TWDR = ( address << 1 )|0x01;
		TWCR = (1<<TWINT) |(1<<TWEN);//Wait for TWINT flag set.
		while (!(TWCR & (1<<TWINT)));
		if ((TWSR & 0xF8) !=TW_MR_SLA_ACK)ERROR();//Check value of TWI Status Register
		//printf("%x\n",TWSR & 0xF8);//Load DATA into TWDR Register

		int tmp[2]={0,0};
		double temper=0;
		TWCR = (1<<TWINT) |(1<<TWEN) |(1<<TWEA);//Wait for TWINT flag set.
		while (!(TWCR & (1<<TWINT)));
		printf("%x\n",TWSR & 0xF8);
		if ((TWSR & 0xF8) !=TW_MR_DATA_ACK)ERROR();
		tmp[0] = TWDR;	 //receive the answer

		TWCR = (1<<TWINT) |(1<<TWEN);//Wait for TWINT flag set.
		while (!(TWCR & (1<<TWINT)));
		printf("%x\n",TWSR & 0xF8);
		tmp[1] = TWDR;	 //receive the answer
		TWCR = (1<<TWINT)|(1<<TWEN)|(1<<TWSTO);//STOP

		temper = tmp[0]+(tmp[1]>>4)*0.0625;
		printf("TMP=%0.4f\n",temper);
		if(flag==0){
			flag=1;
			printf("  flag=1  \nTMP=%0.4f\n",temper);
			sei();
		}
		_delay_ms(1000);
	}
}
//*/

// Interrupt mode
/*
int flag=1;
ISR(INT4_vect) {
	EIFR |= (1<<4);
	flag=0;
	cli();	
} 

void INT_set(){
	EIMSK |= (1<<4);
	EICRB |= (1<<0) | (1<<1);
	DDRE = (0<<4);
	PORTE = 255;
	sei();
}

int main(){
	
	ASA_M128_set();
	INT_set();
	TW_init();
//	printf("---START---\n");
	//設定comfiguration
	TWCR = (1<<TWINT)|(1<<TWSTA)|(1<<TWEN);//Start
	while (!(TWCR & (1<<TWINT)));//Wait for TWINT flag set.
	if ((TWSR & 0xF8) != TW_START) ERROR();//Check value of TWI Status Register
	printf("%x\n",TWSR & 0xF8);//Load SLA_W into TWDR Register.

	TWDR = ( address << 1 ) & 0xFE;
	TWCR = (1<<TWINT) |(1<<TWEN);//Wait for TWINT flag set.
	while (!(TWCR & (1<<TWINT)));
	if ((TWSR & 0xF8) !=TW_MT_SLA_ACK)ERROR();//Check value of TWI Status Register
	printf("%x\n",TWSR & 0xF8);//Load DATA into TWDR Register

	TWDR = 0x01;
	TWCR = (1<<TWINT) |(1<<TWEN);
	while (!(TWCR & (1<<TWINT)));//Wait for TWINT flag set.
	if ((TWSR & 0xF8) !=TW_MT_DATA_ACK)ERROR();//Check value of TWI Status Register.
	printf("%x\n",TWSR & 0xF8);

	TWDR = 0b01100010; //1110 0001 啟動 INTERRUPT(tm=1)
	TWCR = (1<<TWINT) |(1<<TWEN);
	while (!(TWCR & (1<<TWINT)));//Wait for TWINT flag set.
	if ((TWSR & 0xF8) !=TW_MT_DATA_ACK)ERROR();//Check value of TWI Status Register.
	printf("%x\n",TWSR & 0xF8);

	TWCR = (1<<TWINT)|(1<<TWEN)|(1<<TWSTO);//STOP
	_delay_ms(20);
	//設定Thigh結果
	TWCR = (1<<TWINT)|(1<<TWSTA)|(1<<TWEN);//Start
	while (!(TWCR & (1<<TWINT)));//Wait for TWINT flag set.
	if ((TWSR & 0xF8) != TW_START) ERROR();//Check value of TWI Status Register
	printf("%x\n",TWSR & 0xF8);//Load SLA_W into TWDR Register.

	TWDR = ( address << 1 ) & 0xFE;
	TWCR = (1<<TWINT) |(1<<TWEN);//Wait for TWINT flag set.
	while (!(TWCR & (1<<TWINT)));
	if ((TWSR & 0xF8) !=TW_MT_SLA_ACK)ERROR();//Check value of TWI Status Register
	printf("%x\n",TWSR & 0xF8);//Load DATA into TWDR Register

	TWDR = 0x03;
	TWCR = (1<<TWINT) |(1<<TWEN);
	while (!(TWCR & (1<<TWINT)));//Wait for TWINT flag set.
	if ((TWSR & 0xF8) !=TW_MT_DATA_ACK)ERROR();//Check value of TWI Status Register.
	printf("%x\n",TWSR & 0xF8);

	TWDR = 30;//高溫控高8位元 30度
	TWCR = (1<<TWINT) |(1<<TWEN);
	while (!(TWCR & (1<<TWINT)));//Wait for TWINT flag set.
	if ((TWSR & 0xF8) !=TW_MT_DATA_ACK)ERROR();//Check value of TWI Status Register.
	printf("%x\n",TWSR & 0xF8);

	TWDR = 0b00000000;//高溫控低8位元
	TWCR = (1<<TWINT) |(1<<TWEN);
	while (!(TWCR & (1<<TWINT)));//Wait for TWINT flag set.
	if ((TWSR & 0xF8) !=TW_MT_DATA_ACK)ERROR();//Check value of TWI Status Register.
	printf("%x\n",TWSR & 0xF8);

	TWCR = (1<<TWINT)|(1<<TWEN)|(1<<TWSTO);//STOP
	_delay_ms(20);
	//設定Tlow模式
	TWCR = (1<<TWINT)|(1<<TWSTA)|(1<<TWEN);//Start
	while (!(TWCR & (1<<TWINT)));//Wait for TWINT flag set.
	if ((TWSR & 0xF8) != TW_START) ERROR();//Check value of TWI Status Register
	printf("%x\n",TWSR & 0xF8);//Load SLA_W into TWDR Register.

	TWDR = ( address << 1 ) & 0xFE;
	TWCR = (1<<TWINT) |(1<<TWEN);//Wait for TWINT flag set.
	while (!(TWCR & (1<<TWINT)));
	if ((TWSR & 0xF8) !=TW_MT_SLA_ACK)ERROR();//Check value of TWI Status Register
	printf("%x\n",TWSR & 0xF8);//Load DATA into TWDR Register

	TWDR = 0x02;
	TWCR = (1<<TWINT) |(1<<TWEN);
	while (!(TWCR & (1<<TWINT)));//Wait for TWINT flag set.
	if ((TWSR & 0xF8) !=TW_MT_DATA_ACK)ERROR();//Check value of TWI Status Register.
	printf("%x\n",TWSR & 0xF8);

	TWDR = 29;//低溫控高8位元 29度
	TWCR = (1<<TWINT) |(1<<TWEN);
	while (!(TWCR & (1<<TWINT)));//Wait for TWINT flag set.
	if ((TWSR & 0xF8) !=TW_MT_DATA_ACK)ERROR();//Check value of TWI Status Register.
	printf("%x\n",TWSR & 0xF8);

	TWDR = 0b10000000;//低溫控低8位元 0.5度
	TWCR = (1<<TWINT) |(1<<TWEN);
	while (!(TWCR & (1<<TWINT)));//Wait for TWINT flag set.
	if ((TWSR & 0xF8) !=TW_MT_DATA_ACK)ERROR();//Check value of TWI Status Register.
	printf("%x\n",TWSR & 0xF8);

	TWCR = (1<<TWINT)|(1<<TWEN)|(1<<TWSTO);//STOP
	_delay_ms(20);
	//////////////////////////////////
	//設定讀取模式
	TWCR = (1<<TWINT)|(1<<TWSTA)|(1<<TWEN);//Start
	while (!(TWCR & (1<<TWINT)));//Wait for TWINT flag set.
	if ((TWSR & 0xF8) != TW_START) ERROR();//Check value of TWI Status Register
		printf("%x\n",TWSR & 0xF8);//Load SLA_W into TWDR Register.

	TWDR = ( address << 1 ) & 0xFE;
	TWCR = (1<<TWINT) |(1<<TWEN);//Wait for TWINT flag set.
	while (!(TWCR & (1<<TWINT)));
	if ((TWSR & 0xF8) !=TW_MT_SLA_ACK)ERROR();//Check value of TWI Status Register
		printf("%x\n",TWSR & 0xF8);//Load DATA into TWDR Register

	TWDR = 0x00;
	TWCR = (1<<TWINT) |(1<<TWEN);
	while (!(TWCR & (1<<TWINT)));//Wait for TWINT flag set.
	if ((TWSR & 0xF8) !=TW_MT_DATA_ACK)ERROR();//Check value of TWI Status Register.
		printf("%x\n",TWSR & 0xF8);

	TWCR = (1<<TWINT)|(1<<TWEN)|(1<<TWSTO);//STOP
	_delay_ms(20);
	//設定讀取結果
	while(1){
		TWCR = (1<<TWINT)|(1<<TWSTA)|(1<<TWEN);//Start
		while (!(TWCR & (1<<TWINT)));//Wait for TWINT flag set.
		if ((TWSR & 0xF8) != TW_START) ERROR();//Check value of TWI Status Register
		//printf("%x\n",TWSR & 0xF8);//Load SLA_W into TWDR Register.

		TWDR = ( address << 1 )|0x01;
		TWCR = (1<<TWINT) |(1<<TWEN);//Wait for TWINT flag set.
		while (!(TWCR & (1<<TWINT)));
		if ((TWSR & 0xF8) !=TW_MR_SLA_ACK)ERROR();//Check value of TWI Status Register
		//printf("%x\n",TWSR & 0xF8);//Load DATA into TWDR Register

		int tmp[2]={0,0};
		double temper=0;
		TWCR = (1<<TWINT) |(1<<TWEN) |(1<<TWEA);//Wait for TWINT flag set.
		while (!(TWCR & (1<<TWINT)));
		printf("%x\n",TWSR & 0xF8);
		if ((TWSR & 0xF8) !=TW_MR_DATA_ACK)ERROR();
		tmp[0] = TWDR;	 //receive the answer

		TWCR = (1<<TWINT) |(1<<TWEN);//Wait for TWINT flag set.
		while (!(TWCR & (1<<TWINT)));
		printf("%x\n",TWSR & 0xF8);
		tmp[1] = TWDR;	 //receive the answer
		TWCR = (1<<TWINT)|(1<<TWEN)|(1<<TWSTO);//STOP

		temper = tmp[0]+(tmp[1]>>4)*0.0625;
		printf("TMP=%0.4f\n",temper);
		if(flag==0){
			flag=1;
			printf("  flag=1  \nTMP=%0.4f\n",temper);
			sei();
		}
		_delay_ms(1000);
	}
}
*/

